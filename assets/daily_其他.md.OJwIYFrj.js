import{_ as a,c as e,o as t,a3 as s}from"./chunks/framework.CScuXPqu.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"daily/其他.md","filePath":"daily/其他.md"}'),l={name:"daily/其他.md"},i=s('<h2 id="谈谈你对前端工程化的理解" tabindex="-1">谈谈你对前端工程化的理解 <a class="header-anchor" href="#谈谈你对前端工程化的理解" aria-label="Permalink to &quot;谈谈你对前端工程化的理解&quot;">​</a></h2><details class="details custom-block"><summary>查看详情</summary><p>定义：在前端开发和运维过程中，以降低成本、提高效率、保障质量为目的，通过一系列规范、工具、流程（分别对应软件工程中的方法、工具和过程）作为手段的实践体系。</p><ul><li>工具化：针对业务场景集成所需的前端框架、组件库等，提供模块化、包管理、代码检查、预编译、编译打包部署等能力。</li><li>规范化：面向完成需求的整个研发流程，梳理需求管理、视觉交互设计、评审、开发、联调、测试验收、上线部署和质量监控等相关的规范，进一步建设规范来约束研发过程中的不确定性。</li><li>平台化：将支撑研发的有关工具和系统聚合起来。</li></ul></details><h2 id="谈谈你对devops的理解" tabindex="-1">谈谈你对DevOps的理解 <a class="header-anchor" href="#谈谈你对devops的理解" aria-label="Permalink to &quot;谈谈你对DevOps的理解&quot;">​</a></h2><details class="details custom-block"><summary>查看详情</summary><p>DevOps是一种文化和实践方法，旨在通过增强开发（Development）和运维（Operations）团队之间的协作与沟通，实现软件开发和IT运维的自动化和持续交付。DevOps不仅仅是工具和技术的集合，更是一种理念和工作方式，强调跨部门的协作、快速交付高质量软件以及持续改进。</p><ul><li>协作与沟通：DevOps打破了开发和运维之间的壁垒，促进两者之间的紧密合作，形成一个高效的工作流。</li><li>持续交付和持续部署：通过自动化流程，确保软件可以在任何时间点进行发布，并且发布过程尽可能平滑和无缝。</li><li>持续反馈和改进：通过监控和反馈机制，不断优化和改进软件及其交付流程。</li></ul></details>',4),o=[i];function r(d,c,_,n,p,m){return t(),e("div",null,o)}const f=a(l,[["render",r]]);export{h as __pageData,f as default};
