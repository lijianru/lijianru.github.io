import{_ as s,c as a,o as i,a1 as p}from"./chunks/framework.Bw_Y1HHt.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"blog/什么是monorepo.md","filePath":"blog/什么是monorepo.md"}'),n={name:"blog/什么是monorepo.md"},e=p(`<h2 id="什么是monorepo" tabindex="-1">什么是monorepo？ <a class="header-anchor" href="#什么是monorepo" aria-label="Permalink to &quot;什么是monorepo？&quot;">​</a></h2><p>monorepo 是一个代码库中包含许多不同应用程序和包的集合。</p><h2 id="monorepo如何运作" tabindex="-1">monorepo如何运作？ <a class="header-anchor" href="#monorepo如何运作" aria-label="Permalink to &quot;monorepo如何运作？&quot;">​</a></h2><p>monorepo 的主要构建块是 workspace。每个应用程序和包都将位于自己的workspace中，并带有自己的package.json. workspace 可以相互依赖。</p><p>同时它还拥有一个 root workspace - 根目录下的 package.json。它用于：</p><ol><li>指定整个 monorepo 中存在的依赖项</li><li>添加在整个monorepo上运行的任务，而不仅仅是单个工作区</li><li>添加有关如何使用 monorepo 的文档</li></ol><h2 id="在monorepo中安装包" tabindex="-1">在monorepo中安装包 <a class="header-anchor" href="#在monorepo中安装包" aria-label="Permalink to &quot;在monorepo中安装包&quot;">​</a></h2><p>Turborepo 与四个包管理器兼容：</p><ul><li>npm</li><li>pnpm</li><li>Yarn 1</li><li>Yarn &gt;=2（文档即将推出）</li></ul><h3 id="添加-删除-更新包-以pnpm为例" tabindex="-1">添加/删除/更新包（以pnpm为例） <a class="header-anchor" href="#添加-删除-更新包-以pnpm为例" aria-label="Permalink to &quot;添加/删除/更新包（以pnpm为例）&quot;">​</a></h3><ul><li>在 workspace 添加包</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">workspac</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li>在 workspace 删除包</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">workspac</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li>在 workspace 更新包</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">packag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --filter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">workspac</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h2 id="workspace" tabindex="-1">workspace <a class="header-anchor" href="#workspace" aria-label="Permalink to &quot;workspace&quot;">​</a></h2><p>workspace 是 monorepo 的构建块。添加到 monorepo 的每个应用程序和包都将位于其自己的工作区内。</p><h3 id="配置-workspace-以pnpm为例" tabindex="-1">配置 workspace（以pnpm为例） <a class="header-anchor" href="#配置-workspace-以pnpm为例" aria-label="Permalink to &quot;配置 workspace（以pnpm为例）&quot;">​</a></h3><p>将要配置为工作区的文件夹添加到pnpm-workspace.yaml根目录中存在的文件中。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">packages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;docs&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;apps/*&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;packages/*&quot;</span></span></code></pre></div><p>以上配置对应的工程目录为</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>my-monorepo</span></span>
<span class="line"><span>├─ docs</span></span>
<span class="line"><span>├─ apps</span></span>
<span class="line"><span>│  ├─ api</span></span>
<span class="line"><span>│  └─ mobile</span></span>
<span class="line"><span>├─ packages</span></span>
<span class="line"><span>│  ├─ tsconfig</span></span>
<span class="line"><span>│  └─ shared-utils</span></span></code></pre></div><p>推荐的一个常见约定是拥有顶级apps/和packages/目录。</p>`,24),l=[e];function t(h,o,k,r,c,d){return i(),a("div",null,l)}const u=s(n,[["render",t]]);export{m as __pageData,u as default};
